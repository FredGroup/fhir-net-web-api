// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.Health.Fhir.Facade.SqlServer.DemoEntityModels;
using Microsoft.Health.Fhir.Facade.SqlServer.EF;

namespace Microsoft.Health.Fhir.Facade.SqlServer.EntityModels
{
    public partial class FHIR_R4Context : DbContext
    {
        public FHIR_R4Context()
        {
        }

        public FHIR_R4Context(DbContextOptions<FHIR_R4Context> options)
            : base(options)
        {
        }

        public virtual DbSet<Resource> Resource { get; set; }
        public virtual DbSet<ResourceType> ResourceType { get; set; }
        public virtual DbSet<SearchParam> SearchParam { get; set; }
        public virtual DbSet<Microsoft.Health.Fhir.Facade.SqlServer.EF.System> System { get; set; }
        public virtual DbSet<TokenSearchParam> TokenSearchParam { get; set; }

        // Add in the Prototype Closure tables
        public DbSet<ClosureTable> ClosureTable { get; set; }
        public DbSet<ClosureConcept> ClosureConcepts { get; set; }
        public DbSet<ClosureRelationship> ClosureRelationships { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Resource>(entity =>
            {
                entity.HasKey(e => new { e.ResourceTypeId, e.ResourceSurrogateId })
                    .HasName("PKC_Resource");

                entity.HasIndex(e => new { e.ResourceTypeId, e.ResourceId }, "IX_Resource_ResourceTypeId_ResourceId")
                    .IsUnique()
                    .HasFilter("([IsHistory]=(0))");

                entity.HasIndex(e => new { e.ResourceTypeId, e.ResourceSurrogateId }, "IX_Resource_ResourceTypeId_ResourceSurrgateId")
                    .IsUnique()
                    .HasFilter("([IsHistory]=(0) AND [IsDeleted]=(0))");

                entity.Property(e => e.ResourceId).UseCollation("Latin1_General_100_CS_AS");
            });

            modelBuilder.Entity<ResourceType>(entity =>
            {
                entity.HasKey(e => e.Name)
                    .HasName("PKC_ResourceType");

                entity.Property(e => e.Name).UseCollation("Latin1_General_100_CS_AS");

                entity.Property(e => e.ResourceTypeId).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<SearchParam>(entity =>
            {
                entity.HasKey(e => e.Uri)
                    .HasName("PKC_SearchParam");

                entity.Property(e => e.Uri).UseCollation("Latin1_General_100_CS_AS");

                entity.Property(e => e.SearchParamId).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<Microsoft.Health.Fhir.Facade.SqlServer.EF.System>(entity =>
            {
                entity.HasKey(e => e.Value)
                    .HasName("PKC_System");

                entity.Property(e => e.SystemId).ValueGeneratedOnAdd();
            });

            modelBuilder.Entity<TokenSearchParam>(entity =>
            {
                entity.HasIndex(e => new { e.ResourceTypeId, e.ResourceSurrogateId, e.SearchParamId }, "IXC_TokenSearchParam")
                    .IsClustered();

                entity.HasIndex(e => new { e.ResourceTypeId, e.SearchParamId, e.Code, e.ResourceSurrogateId }, "IX_TokenSeachParam_SearchParamId_Code_SystemId")
                    .HasFilter("([IsHistory]=(0))");

                entity.Property(e => e.Code).UseCollation("Latin1_General_100_CS_AS");
            });

            modelBuilder.HasSequence<int>("ResourceSurrogateIdUniquifierSequence")
                .StartsAt(0)
                .HasMin(0)
                .HasMax(79999)
                .IsCyclic();

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}