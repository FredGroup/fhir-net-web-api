using System;
using System.Collections.Generic;
using Hl7.Fhir.Introspection;
using Hl7.Fhir.Validation;
using System.Linq;
using System.Runtime.Serialization;

/*
  Copyright (c) 2011-2013, HL7, Inc.
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:
  
   * Redistributions of source code must retain the above copyright notice, this 
     list of conditions and the following disclaimer.
   * Redistributions in binary form must reproduce the above copyright notice, 
     this list of conditions and the following disclaimer in the documentation 
     and/or other materials provided with the distribution.
   * Neither the name of HL7 nor the names of its contributors may be used to 
     endorse or promote products derived from this software without specific 
     prior written permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
  POSSIBILITY OF SUCH DAMAGE.
  

*/

//
// Generated on Fri, Jan 24, 2014 09:44-0600 for FHIR v0.12
//
namespace Hl7.Fhir.Model
{
    /// <summary>
    /// A reference to a document
    /// </summary>
    [FhirType("DocumentReference", IsResource=true)]
    [DataContract]
    public partial class DocumentReference : Hl7.Fhir.Model.Resource
    {
        /// <summary>
        /// The type of relationship between documents
        /// </summary>
        [FhirEnumeration("DocumentRelationshipType")]
        public enum DocumentRelationshipType
        {
            [EnumLiteral("replaces")]
            Replaces, // This document logically replaces or supercedes the target document.
            [EnumLiteral("transforms")]
            Transforms, // This document was generated by transforming the target document (e.g. format or language conversion).
            [EnumLiteral("signs")]
            Signs, // This document is a signature of the target document.
            [EnumLiteral("appends")]
            Appends, // This document adds additional information to the target document.
        }
        
        /// <summary>
        /// The status of the document reference
        /// </summary>
        [FhirEnumeration("DocumentReferenceStatus")]
        public enum DocumentReferenceStatus
        {
            [EnumLiteral("current")]
            Current, // This is the current reference for this document.
            [EnumLiteral("superceded")]
            Superceded, // This reference has been superseded by another reference.
            [EnumLiteral("entered in error")]
            EnteredInError, // This reference was created in error.
        }
        
        /// <summary>
        /// null
        /// </summary>
        [FhirType("DocumentReferenceContextComponent")]
        [DataContract]
        public partial class DocumentReferenceContextComponent : Hl7.Fhir.Model.Element
        {
            /// <summary>
            /// Main Clinical Acts Documented
            /// </summary>
            [FhirElement("event", Order=40)]
            [Cardinality(Min=0,Max=-1)]
            [DataMember]
            public List<Hl7.Fhir.Model.CodeableConcept> Event { get; set; }
            
            /// <summary>
            /// Time of service that is being documented
            /// </summary>
            [FhirElement("period", Order=50)]
            [DataMember]
            public Hl7.Fhir.Model.Period Period { get; set; }
            
            /// <summary>
            /// Kind of facility where patient was seen
            /// </summary>
            [FhirElement("facilityType", Order=60)]
            [DataMember]
            public Hl7.Fhir.Model.CodeableConcept FacilityType { get; set; }
            
        }
        
        
        /// <summary>
        /// null
        /// </summary>
        [FhirType("DocumentReferenceRelatesToComponent")]
        [DataContract]
        public partial class DocumentReferenceRelatesToComponent : Hl7.Fhir.Model.Element
        {
            /// <summary>
            /// replaces | transforms | signs | appends
            /// </summary>
            [FhirElement("code", Order=40)]
            [Cardinality(Min=1,Max=1)]
            [DataMember]
            public Code<Hl7.Fhir.Model.DocumentReference.DocumentRelationshipType> CodeElement { get; set; }
            
            [NotMapped]
            [IgnoreDataMemberAttribute]
            public Hl7.Fhir.Model.DocumentReference.DocumentRelationshipType? Code
            {
                get { return CodeElement != null ? CodeElement.Value : null; }
                set
                {
                    if(value == null)
                      CodeElement = null; 
                    else
                      CodeElement = new Code<Hl7.Fhir.Model.DocumentReference.DocumentRelationshipType>(value);
                }
            }
            
            /// <summary>
            /// Target of the relationship
            /// </summary>
            [FhirElement("target", Order=50)]
            [Cardinality(Min=1,Max=1)]
            [DataMember]
            public Hl7.Fhir.Model.ResourceReference Target { get; set; }
            
        }
        
        
        /// <summary>
        /// null
        /// </summary>
        [FhirType("DocumentReferenceServiceParameterComponent")]
        [DataContract]
        public partial class DocumentReferenceServiceParameterComponent : Hl7.Fhir.Model.Element
        {
            /// <summary>
            /// Parameter name in service call
            /// </summary>
            [FhirElement("name", Order=40)]
            [Cardinality(Min=1,Max=1)]
            [DataMember]
            public Hl7.Fhir.Model.FhirString NameElement { get; set; }
            
            [NotMapped]
            [IgnoreDataMemberAttribute]
            public string Name
            {
                get { return NameElement != null ? NameElement.Value : null; }
                set
                {
                    if(value == null)
                      NameElement = null; 
                    else
                      NameElement = new Hl7.Fhir.Model.FhirString(value);
                }
            }
            
            /// <summary>
            /// Parameter value for the name
            /// </summary>
            [FhirElement("value", Order=50)]
            [DataMember]
            public Hl7.Fhir.Model.FhirString ValueElement { get; set; }
            
            [NotMapped]
            [IgnoreDataMemberAttribute]
            public string Value
            {
                get { return ValueElement != null ? ValueElement.Value : null; }
                set
                {
                    if(value == null)
                      ValueElement = null; 
                    else
                      ValueElement = new Hl7.Fhir.Model.FhirString(value);
                }
            }
            
        }
        
        
        /// <summary>
        /// null
        /// </summary>
        [FhirType("DocumentReferenceServiceComponent")]
        [DataContract]
        public partial class DocumentReferenceServiceComponent : Hl7.Fhir.Model.Element
        {
            /// <summary>
            /// Type of service (i.e. XDS.b)
            /// </summary>
            [FhirElement("type", Order=40)]
            [Cardinality(Min=1,Max=1)]
            [DataMember]
            public Hl7.Fhir.Model.CodeableConcept Type { get; set; }
            
            /// <summary>
            /// Where service is located (usually a URL)
            /// </summary>
            [FhirElement("address", Order=50)]
            [DataMember]
            public Hl7.Fhir.Model.FhirString AddressElement { get; set; }
            
            [NotMapped]
            [IgnoreDataMemberAttribute]
            public string Address
            {
                get { return AddressElement != null ? AddressElement.Value : null; }
                set
                {
                    if(value == null)
                      AddressElement = null; 
                    else
                      AddressElement = new Hl7.Fhir.Model.FhirString(value);
                }
            }
            
            /// <summary>
            /// Service call parameters
            /// </summary>
            [FhirElement("parameter", Order=60)]
            [Cardinality(Min=0,Max=-1)]
            [DataMember]
            public List<Hl7.Fhir.Model.DocumentReference.DocumentReferenceServiceParameterComponent> Parameter { get; set; }
            
        }
        
        
        /// <summary>
        /// Master Version Specific Identifier
        /// </summary>
        [FhirElement("masterIdentifier", Order=70)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Hl7.Fhir.Model.Identifier MasterIdentifier { get; set; }
        
        /// <summary>
        /// Other identifiers for the document
        /// </summary>
        [FhirElement("identifier", Order=80)]
        [Cardinality(Min=0,Max=-1)]
        [DataMember]
        public List<Hl7.Fhir.Model.Identifier> Identifier { get; set; }
        
        /// <summary>
        /// Who|what is the subject of the document
        /// </summary>
        [FhirElement("subject", Order=90)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Hl7.Fhir.Model.ResourceReference Subject { get; set; }
        
        /// <summary>
        /// What kind of document this is (LOINC if possible)
        /// </summary>
        [FhirElement("type", Order=100)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Hl7.Fhir.Model.CodeableConcept Type { get; set; }
        
        /// <summary>
        /// Categorization of Document
        /// </summary>
        [FhirElement("class", Order=110)]
        [DataMember]
        public Hl7.Fhir.Model.CodeableConcept Class { get; set; }
        
        /// <summary>
        /// Who and/or what authored the document
        /// </summary>
        [FhirElement("author", Order=120)]
        [Cardinality(Min=1,Max=-1)]
        [DataMember]
        public List<Hl7.Fhir.Model.ResourceReference> Author { get; set; }
        
        /// <summary>
        /// Org which maintains the document
        /// </summary>
        [FhirElement("custodian", Order=130)]
        [DataMember]
        public Hl7.Fhir.Model.ResourceReference Custodian { get; set; }
        
        /// <summary>
        /// Manages access policies for the document
        /// </summary>
        [FhirElement("policyManager", Order=140)]
        [DataMember]
        public Hl7.Fhir.Model.FhirUri PolicyManagerElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public System.Uri PolicyManager
        {
            get { return PolicyManagerElement != null ? PolicyManagerElement.Value : null; }
            set
            {
                if(value == null)
                  PolicyManagerElement = null; 
                else
                  PolicyManagerElement = new Hl7.Fhir.Model.FhirUri(value);
            }
        }
        
        /// <summary>
        /// Who/What authenticated the document
        /// </summary>
        [FhirElement("authenticator", Order=150)]
        [DataMember]
        public Hl7.Fhir.Model.ResourceReference Authenticator { get; set; }
        
        /// <summary>
        /// Document creation time
        /// </summary>
        [FhirElement("created", Order=160)]
        [DataMember]
        public Hl7.Fhir.Model.FhirDateTime CreatedElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public string Created
        {
            get { return CreatedElement != null ? CreatedElement.Value : null; }
            set
            {
                if(value == null)
                  CreatedElement = null; 
                else
                  CreatedElement = new Hl7.Fhir.Model.FhirDateTime(value);
            }
        }
        
        /// <summary>
        /// When this document reference created
        /// </summary>
        [FhirElement("indexed", Order=170)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Hl7.Fhir.Model.Instant IndexedElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public DateTimeOffset? Indexed
        {
            get { return IndexedElement != null ? IndexedElement.Value : null; }
            set
            {
                if(value == null)
                  IndexedElement = null; 
                else
                  IndexedElement = new Hl7.Fhir.Model.Instant(value);
            }
        }
        
        /// <summary>
        /// current | superceded | entered in error
        /// </summary>
        [FhirElement("status", Order=180)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Code<Hl7.Fhir.Model.DocumentReference.DocumentReferenceStatus> StatusElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public Hl7.Fhir.Model.DocumentReference.DocumentReferenceStatus? Status
        {
            get { return StatusElement != null ? StatusElement.Value : null; }
            set
            {
                if(value == null)
                  StatusElement = null; 
                else
                  StatusElement = new Code<Hl7.Fhir.Model.DocumentReference.DocumentReferenceStatus>(value);
            }
        }
        
        /// <summary>
        /// preliminary | final | appended | amended | entered in error
        /// </summary>
        [FhirElement("docStatus", Order=190)]
        [DataMember]
        public Hl7.Fhir.Model.CodeableConcept DocStatus { get; set; }
        
        /// <summary>
        /// Relationships to other documents
        /// </summary>
        [FhirElement("relatesTo", Order=200)]
        [Cardinality(Min=0,Max=-1)]
        [DataMember]
        public List<Hl7.Fhir.Model.DocumentReference.DocumentReferenceRelatesToComponent> RelatesTo { get; set; }
        
        /// <summary>
        /// Human-readable description (title)
        /// </summary>
        [FhirElement("description", Order=210)]
        [DataMember]
        public Hl7.Fhir.Model.FhirString DescriptionElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public string Description
        {
            get { return DescriptionElement != null ? DescriptionElement.Value : null; }
            set
            {
                if(value == null)
                  DescriptionElement = null; 
                else
                  DescriptionElement = new Hl7.Fhir.Model.FhirString(value);
            }
        }
        
        /// <summary>
        /// Sensitivity of source document
        /// </summary>
        [FhirElement("confidentiality", Order=220)]
        [Cardinality(Min=0,Max=-1)]
        [DataMember]
        public List<Hl7.Fhir.Model.CodeableConcept> Confidentiality { get; set; }
        
        /// <summary>
        /// The marked primary language for the document
        /// </summary>
        [FhirElement("primaryLanguage", Order=230)]
        [DataMember]
        public Hl7.Fhir.Model.Code PrimaryLanguageElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public string PrimaryLanguage
        {
            get { return PrimaryLanguageElement != null ? PrimaryLanguageElement.Value : null; }
            set
            {
                if(value == null)
                  PrimaryLanguageElement = null; 
                else
                  PrimaryLanguageElement = new Hl7.Fhir.Model.Code(value);
            }
        }
        
        /// <summary>
        /// Mime type, + maybe character encoding
        /// </summary>
        [FhirElement("mimeType", Order=240)]
        [Cardinality(Min=1,Max=1)]
        [DataMember]
        public Hl7.Fhir.Model.Code MimeTypeElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public string MimeType
        {
            get { return MimeTypeElement != null ? MimeTypeElement.Value : null; }
            set
            {
                if(value == null)
                  MimeTypeElement = null; 
                else
                  MimeTypeElement = new Hl7.Fhir.Model.Code(value);
            }
        }
        
        /// <summary>
        /// Format/content rules for the document
        /// </summary>
        [FhirElement("format", Order=250)]
        [Cardinality(Min=0,Max=-1)]
        [DataMember]
        public List<Hl7.Fhir.Model.FhirUri> FormatElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public IEnumerable<System.Uri> Format
        {
            get { return FormatElement != null ? FormatElement.Select(elem => elem.Value) : null; }
            set
            {
                if(value == null)
                  FormatElement = null; 
                else
                  FormatElement = new List<Hl7.Fhir.Model.FhirUri>(value.Select(elem=>new Hl7.Fhir.Model.FhirUri(elem)));
            }
        }
        
        /// <summary>
        /// Size of the document in bytes
        /// </summary>
        [FhirElement("size", Order=260)]
        [DataMember]
        public Hl7.Fhir.Model.Integer SizeElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public int? Size
        {
            get { return SizeElement != null ? SizeElement.Value : null; }
            set
            {
                if(value == null)
                  SizeElement = null; 
                else
                  SizeElement = new Hl7.Fhir.Model.Integer(value);
            }
        }
        
        /// <summary>
        /// HexBinary representation of SHA1
        /// </summary>
        [FhirElement("hash", Order=270)]
        [DataMember]
        public Hl7.Fhir.Model.FhirString HashElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public string Hash
        {
            get { return HashElement != null ? HashElement.Value : null; }
            set
            {
                if(value == null)
                  HashElement = null; 
                else
                  HashElement = new Hl7.Fhir.Model.FhirString(value);
            }
        }
        
        /// <summary>
        /// Where to access the document
        /// </summary>
        [FhirElement("location", Order=280)]
        [DataMember]
        public Hl7.Fhir.Model.FhirUri LocationElement { get; set; }
        
        [NotMapped]
        [IgnoreDataMemberAttribute]
        public System.Uri Location
        {
            get { return LocationElement != null ? LocationElement.Value : null; }
            set
            {
                if(value == null)
                  LocationElement = null; 
                else
                  LocationElement = new Hl7.Fhir.Model.FhirUri(value);
            }
        }
        
        /// <summary>
        /// If access is not fully described by location
        /// </summary>
        [FhirElement("service", Order=290)]
        [DataMember]
        public Hl7.Fhir.Model.DocumentReference.DocumentReferenceServiceComponent Service { get; set; }
        
        /// <summary>
        /// Clinical context of document
        /// </summary>
        [FhirElement("context", Order=300)]
        [DataMember]
        public Hl7.Fhir.Model.DocumentReference.DocumentReferenceContextComponent Context { get; set; }
        
    }
    
}
